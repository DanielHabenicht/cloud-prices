# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Query Data

on:
  push:
    branches: [ main ]

jobs:
  data:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.find_run_id.outputs.run_id }}
    steps:
    - name: Find last run ID with artifact "data"
      id: find_run_id
      uses: actions/github-script@v6
      with:
        script: |
          const ONE_DAY_MS = 24 * 60 * 60 * 1000; // 24 hours in milliseconds
          const now = new Date();
          const runs = await github.actions.listWorkflowRunsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 100
          });
          
          let runId = null;

          for (const run of runs.data.workflow_runs) {
            const runTime = new Date(run.created_at);
            const timeDifference = now - runTime;

            if (timeDifference > ONE_DAY_MS) {
              continue; // Skip runs older than 24 hours
            }

            const artifacts = await github.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: run.id
            });

            if (artifacts.data.artifacts.some(artifact => artifact.name === 'data')) {
              runId = run.id;
              break;
            }
          }

          if (runId) {
            console.log(`Found run ID: ${runId}`);
            core.setOutput('run_id', runId);
          } else {
            console.log('No run found with an artifact named "data" within the last 24 hours.');
          }
    
    - name: Display the run ID
      if: steps.find_run_id.outputs.run_id
      run: echo "The run ID of the last run with the artifact 'data' is ${{ steps.find_run_id.outputs.run_id }}."

    - uses: actions/checkout@v2
      if: steps.find_run_id.outputs.run_id
    - name: Set up Python
      if: steps.find_run_id.outputs.run_id
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      if: steps.find_run_id.outputs.run_id
      run: |
        python -m pip install --upgrade pip poetry
        poetry install
    - name: Query
      if: steps.find_run_id.outputs.run_id
      run: |
        poetry run python azure.py

    - name: Upload a Build Artifact
      if: steps.find_run_id.outputs.run_id
      uses: actions/upload-artifact@v4.3.5
      with:
        name: data
        path: frontend/public/test_new.sqlite
              
  frontend:
    runs-on: ubuntu-latest
    needs: [data]

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

   # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-node@v2
      with:
        node-version: "20"

    - name: Install dependencies
      run: |
        npm ci
        npm run build
      working-directory: frontend

    - name: Download Data
      if: needs.data.outputs.run_id == ''
      uses: actions/download-artifact@v4.1.8
      with:  
        name: data
        path: frontend/dist/test_new.sqlite

    - name: Download Data
      if: needs.data.outputs.run_id
      uses: actions/download-artifact@v4.1.8
      with:  
        name: data
        path: frontend/dist/test_new.sqlite
        run-id: ${{ needs.data.outputs.run_id }}

    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3.0.1
      with:
        # Path of the directory containing the static assets.
        path: frontend/dist
              
    - name: Deploy GitHub Pages site
      id: deployment
      uses: actions/deploy-pages@v4.0.5              
